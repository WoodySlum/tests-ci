stages:
  - lint
  - test
  - pre-build
  - build
  - deploy

variables:
  POETRY_VERSION: 1.8.2  # Remplace par la version correcte
  REGISTRY_URL: ${CI_REGISTRY}  # Utilise le registry GitLab CI/CD
  IMAGE_NAME: "$REGISTRY_URL/hello-world-ci"

# Job Lint
lint:
  stage: lint
  image: docker:19.03.12  # Utilisation d'une image avec Docker préinstallé
  tags:
    - walnut
  before_script:
    # Authentification Docker
    - echo "$DOCKER_USERNAME
    - echo "$DOCKER_PASSWORD
    - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
  script:
    - pip install poetry==$POETRY_VERSION
    - poetry install
    - poetry run black --check .
    - poetry run pylint main.py || true  # Ignore les warnings

# Job Test
test:
  stage: test
  image: docker:19.03.12  # Utilisation d'une image avec Docker préinstallé
  tags:
    - walnut
  before_script:
    # Authentification Docker
    - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
  script:
    - pip install poetry==$POETRY_VERSION
    - poetry install
    - poetry run pytest

# Job Pre-build
pre-build:
  stage: pre-build
  image: docker:19.03.12  # Utilisation d'une image avec Docker préinstallé
  tags:
    - walnut
  before_script:
    # Authentification Docker
    - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
  script:
    - if [ ! -f Dockerfile ]; then echo "Dockerfile missing!"; exit 1; fi

# Job Build
build:
  stage: build
  image: docker:19.03.12  # Utilisation d'une image avec Docker préinstallé
  tags:
    - walnut
  services:
    - docker:dind
  before_script:
    - echo "Nettoyage de REGISTRY_URL"
    - export REGISTRY_URL=$(echo $REGISTRY_URL | sed 's|https://||' | sed 's|/$||')
    - echo "$DOCKER_PASSWORD" | docker login "$REGISTRY_URL" -u "$DOCKER_USERNAME" --password-stdin
  script:
    - docker build -t $REGISTRY_URL/hello-world-ci:latest .

# Job Deploy
deploy:
  stage: deploy
  image: docker:19.03.12  # Utilisation d'une image avec Docker préinstallé
  tags:
    - walnut
  services:
    - docker:dind
  before_script:
    - echo "Nettoyage de REGISTRY_URL"
    - export REGISTRY_URL=$(echo $REGISTRY_URL | sed 's|https://||' | sed 's|/$||')
    - echo "$DOCKER_PASSWORD" | docker login "$REGISTRY_URL" -u "$DOCKER_USERNAME" --password-stdin
  script:
    - docker push $REGISTRY_URL/hello-world-ci:latest